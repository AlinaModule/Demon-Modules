#meta developer: @hikka_dmod
#–ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª —Å—É—á–∫–∞ 
from datetime import datetime, timedelta
from .. import loader

@loader.tds
class DateInfo(loader.Module):
    strings = {
        'name': 'DateInfo',
    }

    @loader.command()
    async def di(self, message):
        """- —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–≥–æ–¥–Ω—è"""
        now = datetime.now()
        months = [
            "–Ø–Ω–≤–∞—Ä—å", "–§–µ–≤—Ä–∞–ª—å", "–ú–∞—Ä—Ç", "–ê–ø—Ä–µ–ª—å",
            "–ú–∞–π", "–ò—é–Ω—å", "–ò—é–ª—å", "–ê–≤–≥—É—Å—Ç",
            "–°–µ–Ω—Ç—è–±—Ä—å", "–û–∫—Ç—è–±—Ä—å", "–ù–æ—è–±—Ä—å", "–î–µ–∫–∞–±—Ä—å"
        ]
        seasons = [
            "–ó–∏–º–∞", "–ó–∏–º–∞", "–í–µ—Å–Ω–∞", "–í–µ—Å–Ω–∞",
            "–õ–µ—Ç–æ", "–õ–µ—Ç–æ", "–û—Å–µ–Ω—å", "–û—Å–µ–Ω—å",
            "–û—Å–µ–Ω—å", "–ó–∏–º–∞", "–ó–∏–º–∞", "–ó–∏–º–∞"
        ]
        emojis = {
            "–ó–∏–º–∞": ("‚òÉÔ∏è", "‚ùÑÔ∏è", "2‚É£"),
            "–í–µ—Å–Ω–∞": ("üåπ", "üåæ", "3‚É£"),
            "–õ–µ—Ç–æ": ("üçÉ", "ü™¥", "4‚É£"),
            "–û—Å–µ–Ω—å": ("üçÇ", "üçÅ", "1‚É£")
        }
        holidays = {
            (1, 1): "‚ùÑÔ∏è –ù–æ–≤—ã–π –≥–æ–¥",
            (2, 23): "üá∑üá∫ –î–µ–Ω—å –∑–∞—â–∏—Ç–Ω–∏–∫–∞ –û—Ç–µ—á–µ—Å—Ç–≤–∞",
            (5, 9): "ü´° –î–µ–Ω—å –ü–æ–±–µ–¥—ã",
            (6, 1): "ü•µ –î–µ–Ω—å –∑–∞—â–∏—Ç—ã –¥–µ—Ç–µ–π",
            (9, 1): "üìö –î–µ–Ω—å –∑–Ω–∞–Ω–∏–π",
            (2, 14): "ü©∑ –î–µ–Ω—å –≤–ª—é–±–ª–µ–Ω–Ω—ã—Ö"
        }

        current_year = now.year
        current_month_index = now.month 
        current_month = months[current_month_index - 1]
        current_season = seasons[now.month - 1]
        current_emojis = emojis[current_season]
        current_day = now.day
        current_weekday = now.strftime("%A")
        weekdays_ru = {
            "Monday": "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫",
            "Tuesday": "–í—Ç–æ—Ä–Ω–∏–∫",
            "Wednesday": "–°—Ä–µ–¥–∞",
            "Thursday": "–ß–µ—Ç–≤–µ—Ä–≥",
            "Friday": "–ü—è—Ç–Ω–∏—Ü–∞",
            "Saturday": "–°—É–±–±–æ—Ç–∞",
            "Sunday": "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"
        }
        current_weekday_ru = weekdays_ru[current_weekday]
        weekend_days = ["–°—É–±–±–æ—Ç–∞", "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"]
        day_emoji = "‚ùï" if current_weekday_ru in weekend_days else "‚ùóÔ∏è"
        days_in_month = (datetime(current_year, current_month_index + 1, 1) - datetime(current_year, current_month_index, 1)).days if current_month_index < 12 else 31
        days_remaining = days_in_month - current_day
        next_month = months[current_month_index] if current_month_index < 12 else months[0]
        last_day_of_year = datetime(current_year, 12, 31)
        days_until_end_of_year = (last_day_of_year - now).days
        holiday = holidays.get((now.month, now.day), None)
        holiday_message = f"üéâ<b>{holiday}!</b>" if holiday else "üò≠ <b>–°–µ–≥–æ–¥–Ω—è –ø—Ä–∞–∑–¥–Ω–∏–∫ –Ω–µ –æ—Ç–º–µ—á–∞–µ—Ç—Å—è</b>"

        response = (
            f"{current_emojis[0]} <b>–°–µ–π—á–∞—Å:</b> <code>{current_month} ({current_month_index})</code>\n"
            f"{current_emojis[1]} <b>–í—Ä–µ–º—è –≥–æ–¥–∞</b>: <code>{current_season}</code>\n\n"
            f"{day_emoji} <b>–ß–∏—Å–ª–æ:</b> <code>{current_day}</code>\n"
            f"üìÖ <b>–ì–æ–¥:</b> <code>{current_year}</code>\n"
            f"üí¨ <b>–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏:</b> <code>{current_weekday_ru}</code>\n"
            f"{holiday_message}\n\n"
            f"üí§ <b>–í—Å–µ–≥–æ –¥–Ω–µ–π –≤ –º–µ—Å—è—Ü–µ:</b> <code>{days_in_month}</code>\n"
            f"‚úÖ <b>–î–æ –∫–æ–Ω—Ü–∞ –º–µ—Å—è—Ü–∞ –æ—Å—Ç–∞–ª–æ—Å—å <code>{days_remaining}</code> –¥–Ω–µ–π</b>\n"
            f"üìÜ <b>–î–æ –∫–æ–Ω—Ü–∞ –≥–æ–¥–∞ –æ—Å—Ç–∞–ª–æ—Å—å <code>{days_until_end_of_year}</code> –¥–Ω–µ–π</b>\n"
            f"‚û°Ô∏è <b>–°–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü</b>: <code>{next_month}</code>"
        )

        await message.respond(response)
        await message.delete()

    @loader.command()
    async def tsru(self, message):
        """- –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–∫–æ–ª—å–∫–æ —Å–µ–π—á–∞—Å –≤—Ä–µ–º–µ–Ω–∏ –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≥–æ—Ä–æ–¥–∞—Ö –†–æ—Å—Å–∏–∏"""
        time_zones = {
            "‚ú® –ú–æ—Å–∫–≤–∞": 3,
            "üí™ –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥": 2,
            "ü•¥ –°–∞–º–∞—Ä–∞": 4,
            "‚úàÔ∏è –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥": 5,
            "üåå –û–º—Å–∫": 6,
            "‚ù§Ô∏è –ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫": 7,
            "üåë –ò—Ä–∫—É—Ç—Å–∫": 8,
            "‚öôÔ∏è –Ø–∫—É—Ç—Å–∫": 9,
            "‚öïÔ∏è –í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫": 10,
            "„Ä∞Ô∏è –ö–∞–º—á–∞—Ç–∫–∞": 12,

        }

        utc_now = datetime.utcnow()
        response = "üïñ <b>–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≥–æ—Ä–æ–¥–∞—Ö –†–æ—Å—Å–∏–∏:</b>\n\n"
        
        for city, offset in time_zones.items():
            city_time = utc_now + timedelta(hours=offset)
            response += f"<b>{city}:</b> <code>{city_time.strftime('%H:%M:%S')}</code>\n"

        await message.respond(response)
        await message.delete()